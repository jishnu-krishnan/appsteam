{"version":3,"sources":["./src/environments/environment.ts","./src/app/services.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpHeaders,HttpClient } from '@angular/common/http';\nimport { Observable } from \"rxjs\";\nimport { map, catchError, retry } from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServicesService {\n  //baseUrl:string = 'http://localhost:3000/api';\n  baseUrl:string = 'api';\n  headers = new HttpHeaders().set('Content-Type', 'application/json');\n  \n  constructor(private http:HttpClient) { }\n\n  // Get select Movie for home page\n  getMovies(): Observable<any> {\n    let url= `${this.baseUrl}/list`\n    return this.http.get(url,{headers:this.headers} )//.pipe(map((response:[])=> response.map(item => item['Name'])))\n  }\n\n  // Get select Movie names for selection box\n  getMovieNames(): Observable<any> {\n    let url= `${this.baseUrl}/movies`\n    return this.http.get(url,{headers:this.headers} ).pipe(map((response:[])=> response.map(item => item['Name'])))\n  }\n\n  // Get full details of movie details for a selected item\n  getMovieDetails(data): Observable<any> {\n    let url= `${this.baseUrl}/search`\n    return this.http.post(url,data,{headers:this.headers})\n  }\n}\n","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport {ServicesService} from '../app/services.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'frontend';\n  details :any = []\n  movieList :any = []\n  options = []\n  filteredOptions = []\n  searchForm : FormGroup;\n  \n  constructor(\n    public fb: FormBuilder,\n    private Service : ServicesService,\n    ) {}\n\n  ngOnInit(){\n    this.initForm();\n    this.getNames();\n    this.getMovie();\n  }\n\n  initForm(){\n    this.searchForm = this.fb.group({\n      'name' : ['']\n  })\n    this.searchForm.get('name').valueChanges.subscribe(response => {\n      if(response && response.length){\n        this.filterData(response);\n        this.getDetails(response);\n      }else{\n        this.filteredOptions = []\n      }\n    })\n  }\n\n  filterData(enteredData){\n    this.filteredOptions = this.options.filter(item => {\n      return item.toLowerCase().indexOf(enteredData.toLowerCase()) > -1\n    })\n  }\n\n  getNames(){\n    this.Service.getMovieNames().subscribe(response => {\n      this.options = response;\n      //this.filteredOptions = response;\n    })\n  }\n\n  getDetails(value){\n    const data={\n      name:value\n    }\n    \n    this.Service.getMovieDetails(JSON.stringify(data)).subscribe(response => {\n      this.details=response\n      //console.log(this.details)\n    })\n  }\n\n  getMovie(){\n    this.Service.getMovies().subscribe(response => {\n      this.details=response\n    })\n  }\n}\n\n","<div>\n  \n  <div class=\"container\">\n    <div class=\"title container center\">\n      <h1><b>Malayalam movies list</b></h1>\n      <div class=\"content\">The new malayalam movies list and its rating</div>\n    </div>\n    <div class=\"container\">\n      <!-- <div class=card> -->\n        <form [formGroup]=\"searchForm\">\n          <mat-form-field>\n            <mat-label>\n              Search....\n            </mat-label>\n            <input formControlName=\"name\" matInput type=\"text\" [matAutocomplete]=\"auto\" />\n            <mat-autocomplete #auto=\"matAutocomplete\">\n              <mat-option *ngFor=\"let item of filteredOptions\" [value]=\"item\">\n                {{item}}\n              </mat-option>\n            </mat-autocomplete>\n          </mat-form-field>\n        </form>\n      <!-- </div> -->\n    </div>\n    <div class=\"container \" >\n      <div class=card *ngFor=\"let val of details \">\n        <div class=\"name\">\n          <h3>{{val.Name}}</h3>\n        </div>\n          <div class=\"items\">\n            <div class=\"row\">\n              <table>\n                <tbody>\n                  <tr>\n                    <td>Genre</td>\n                    <td>{{val.Genre}}</td>\n                    <td>Rating</td>\n                    <td>{{val.Rating}} %</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n      </div>\n    </div>\n  </div> \n  <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { ServicesService } from './services.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatAutocompleteModule,\r\n    MatInputModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent, ServicesService]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}